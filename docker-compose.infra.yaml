services:
  mongo:
    image: mongo:7
    restart: unless-stopped
    env_file:
      - ./.env.docker
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - mmeals_net

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    env_file:
      - ./.env.docker
    depends_on:
      - mongo
    networks:
      - mmeals_net

  redis:
    image: redis:7
    restart: unless-stopped
    networks:
      - mmeals_net

  recipe-scraper-01:
    build:
      context: .
      dockerfile: scraper.Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env.docker
    depends_on:
      - redis
    networks:
      - mmeals_net

  recipe-scraper-02:
    build:
      context: .
      dockerfile: scraper.Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env.docker
    depends_on:
      - redis
    networks:
      - mmeals_net

  recipe-scraper-lb:
    image: haproxy:2.9
    restart: unless-stopped
    sysctls:
      - net.ipv4.ip_unprivileged_port_start=0
    depends_on:
      - recipe-scraper-01
      - recipe-scraper-02
    command: >
      bash -c "/opt/wait-for-it.sh -t 30 recipe-scraper-01:8000 --
        /opt/wait-for-it.sh -t 30 recipe-scraper-02:8000 --
        haproxy -f /usr/local/etc/haproxy/haproxy.cfg -W -db"
    volumes:
      - ./haproxy-recipe-scraper.cfg:/usr/local/etc/haproxy/haproxy.cfg
      - ./wait-for-it.sh:/opt/wait-for-it.sh
    networks:
      - mmeals_net

  typesense:
    image: typesense/typesense:0.25.2
    restart: unless-stopped
    volumes:
      - typesense-data:/data
    env_file:
      - ./.env.docker
    networks:
      - mmeals_net

  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    env_file:
      - ./.env.docker
    networks:
      - mmeals_net

  queue-consumer:
    build:
      context: .
      dockerfile: consumer.Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env.docker
    depends_on:
      - rabbitmq
      - mongo
      - typesense
    networks:
      - mmeals_net

  search-sync:
    build:
      context: .
      dockerfile: search-sync.Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env.docker
    depends_on:
      - mongo
      - typesense
    networks:
      - mmeals_net

  webhooks-handler:
    build:
      context: .
      dockerfile: webhooks-handler.Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env.docker
    depends_on:
      - mongo
    networks:
      - mmeals_net

volumes:
  mongo-data:
  typesense-data:

networks:
  mmeals_net:
    name: mmeals_net
    driver: bridge
